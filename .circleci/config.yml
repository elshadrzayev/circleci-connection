# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  print_pipeline_id:
    steps:
      - checkout
      - run: echo ${CIRCLE_WORKFLOW_ID}

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  print-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/node:13.8.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say print hello"
          command: "echo Hello!"
      - print_pipeline_id

  print-world:
    docker:
      - image: circleci/node:13.8.0

    steps:
      - checkout
      - run:
          name: "Say Hello World"
          command: "echo world"

  print-myname:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "What is your name"
          command: |
            echo ${my_name}
            echo $MY_ENV_NAME
          environment:
            my_name: "Elshad"

  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: mkdir -p workspace
      - run: echo "Hello World Elshad" >workspace/output.txt
      - persist_to_workspace:
          root: workspace
          paths:
            - output.txt

  new_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: output_file
          command: cat workspace/output.txt

  check_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: return non-zero
          command: echo '1'

      - run:
          name: when failed
          command: echo 'previous failed'
          when: on_fail
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - print-hello
      - print-world:
          requires: [print-hello]
      - print-myname:
          requires: [print-hello, print-world]
          context: MY_ENV_VAR
      - save_hello_world_output:
          requires: [print-hello, print-world, print-myname]
      - new_hello:
          requires: [save_hello_world_output]
      - check_hello:
          requires: [new_hello]
